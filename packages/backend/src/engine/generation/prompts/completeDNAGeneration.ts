/**
 * Complete DNA Generation Prompt
 * 
 * Generates DNA for entire hierarchy in ONE LLM call:
 * - Host (full DNA)
 * - All Regions (sparse DNA)
 * - All Locations (sparse DNA)
 * - All Niches (sparse DNA)
 * 
 * @param originalPrompt - Original user input
 * @param hierarchy - The hierarchy structure from classification
 * @returns Prompt string for LLM
 */
export function completeDNAGeneration(
  originalPrompt: string,
  hostName: string,
  hostDescription: string,
  regions: Array<{
    name: string;
    description: string;
    locations?: Array<{
      name: string;
      description: string;
      niches?: Array<{ name: string; description: string }>;
    }>;
  }>
): string {
  const rv = `Generate complete DNA for an entire location hierarchy in ONE response.

USER INPUT:
${originalPrompt}

HIERARCHY STRUCTURE:

HOST: ${hostName}
Description: ${hostDescription}

${regions.map(region => `
REGION: ${region.name}
Description: ${region.description}
${region.locations ? region.locations.map(loc => `
  LOCATION: ${loc.name}
  Description: ${loc.description}
  ${loc.niches ? loc.niches.map(niche => `
    NICHE: ${niche.name}
    Description: ${niche.description}
  `).join('') : ''}
`).join('') : ''}
`).join('')}

OUTPUT STRUCTURE:

{
  "host": {
    // FULL DNA - all 22 fields populated
    "looks": "2-4 sentences describing what is seen",
    "colorsAndLighting": "1-3 sentences on colors and light",
    "atmosphere": "2-4 sentences on air, temperature, motion, weather",
    "architectural_tone": "10-20 char phrase (e.g. 'futuristic metal')",
    "cultural_tone": "1 sentence on social/functional identity",
    "materials": "1-3 sentences naming main materials",
    "mood": "1-2 sentences on emotional tone",
    "sounds": "5-7 words listing ambient sounds",
    "dominantElementsDescriptors": "3-5 defining objects or structures",
    "spatialLayout": "1-3 sentences on space shape, dimensions",
    "primary_surfaces": "Main materials on walls, floor, ceiling",
    "secondary_surfaces": "Supporting materials on furniture",
    "accent_features": "Decorative or striking details",
    "dominant": "Primary color family with coverage area",
    "secondary": "Secondary color and where it appears",
    "accent": "Accent colors and placement",
    "ambient": "Overall light tone (warm/cool/neutral)",
    "uniqueIdentifiers": "2-4 distinctive visual features",
    "searchDesc": "75-100 char search description"
  },
  "regions": [
    {
      "name": "Region Name",
      "dna": {
        // SPARSE DNA - only fields that DIFFER from Host
        // Set to null for fields that inherit from Host
        "architectural_tone": "different style" or null,
        "cultural_tone": "different culture" or null,
        "mood": "different mood" or null,
        // ... other fields null if inheriting from Host
      }
    }
  ],
  "locations": [
    {
      "regionName": "Which region this belongs to",
      "name": "Location Name",
      "dna": {
        // SPARSE DNA - only fields that DIFFER from Host + Region
        "sounds": "different sounds" or null,
        "materials": "different materials" or null,
        // ... other fields null if inheriting
      }
    }
  ],
  "niches": [
    {
      "locationName": "Which location this belongs to",
      "name": "Niche Name",
      "dna": {
        // SPARSE DNA - only fields that DIFFER from parent chain
        "atmosphere": "intimate feel" or null,
        "spatialLayout": "specific layout" or null,
        // ... other fields null if inheriting
      }
    }
  ]
}

‚ö†Ô∏è CRITICAL GUIDELINES - SPARSE DNA ENFORCEMENT ‚ö†Ô∏è

1. **Host DNA**: Generate ALL 22 fields with complete descriptions

2. **Child DNA - FIELD-BY-FIELD SPARSE ENFORCEMENT**:
   
   üö® FOR EACH OF THE 22 FIELDS, YOU MUST ASK: "Is this DIFFERENT from parent?" üö®
   
   Go through EVERY field in this exact order for child nodes:
   
   1. looks ‚Üí Different? If NO ‚Üí null
   2. colorsAndLighting ‚Üí Different? If NO ‚Üí null
   3. atmosphere ‚Üí Different? If NO ‚Üí null
   4. architectural_tone ‚Üí Different? If NO ‚Üí null
   5. cultural_tone ‚Üí Different? If NO ‚Üí null
   6. materials ‚Üí Different? If NO ‚Üí null
   7. mood ‚Üí Different? If NO ‚Üí null
   8. sounds ‚Üí Different? If NO ‚Üí null
   9. dominantElementsDescriptors ‚Üí Different? If NO ‚Üí null
   10. spatialLayout ‚Üí Different? If NO ‚Üí null
   11. primary_surfaces ‚Üí Different? If NO ‚Üí null
   12. secondary_surfaces ‚Üí Different? If NO ‚Üí null
   13. accent_features ‚Üí Different? If NO ‚Üí null
   14. dominant ‚Üí Different? If NO ‚Üí null
   15. secondary ‚Üí Different? If NO ‚Üí null
   16. accent ‚Üí Different? If NO ‚Üí null
   17. ambient ‚Üí Different? If NO ‚Üí null
   18. uniqueIdentifiers ‚Üí Different? If NO ‚Üí null
   19. searchDesc ‚Üí Must be unique, always provide
   
   EXAMPLE - Camden region (parent: London):
   1. looks: Camden has street art, markets ‚Üí DIFFERENT ‚Üí Provide value
   2. colorsAndLighting: Same urban lighting ‚Üí SAME ‚Üí null
   3. atmosphere: Camden more bohemian ‚Üí DIFFERENT ‚Üí Provide value
   4. architectural_tone: Same Victorian/modern mix ‚Üí SAME ‚Üí null
   5. cultural_tone: Camden alternative scene ‚Üí DIFFERENT ‚Üí Provide value
   6. materials: Same brick/concrete ‚Üí SAME ‚Üí null
   7. mood: Camden more rebellious ‚Üí DIFFERENT ‚Üí Provide value
   8. sounds: Same traffic/urban sounds ‚Üí SAME ‚Üí null
   9. dominantElementsDescriptors: Camden markets unique ‚Üí DIFFERENT ‚Üí Provide value
   10. spatialLayout: Same dense urban ‚Üí SAME ‚Üí null
   11. primary_surfaces: Same brick/concrete ‚Üí SAME ‚Üí null
   12. secondary_surfaces: Same ‚Üí SAME ‚Üí null
   13. accent_features: Camden street art unique ‚Üí DIFFERENT ‚Üí Provide value
   14. dominant: Same gray ‚Üí SAME ‚Üí null
   15. secondary: Same ‚Üí SAME ‚Üí null
   16. accent: Camden neon different ‚Üí DIFFERENT ‚Üí Provide value
   17. ambient: Same ‚Üí SAME ‚Üí null
   18. uniqueIdentifiers: Camden Lock Market ‚Üí DIFFERENT ‚Üí Provide value
   19. searchDesc: Always unique ‚Üí Provide value
   
   RESULT: 9 fields populated, 13 null (this is correct!)
   
   ‚ö†Ô∏è PASSTHROUGH REGIONS (empty description, same name as host):
   Provide minimum 2-3 contextual fields to prevent completely empty DNA.
   
   üö® TARGET: Child nodes should have 60-70% fields as null üö®

3. **Inheritance Chain**: 
   - Regions inherit from Host
   - Locations inherit from Host + Region
   - Niches inherit from Host + Region + Location

4. **Parent References**: 
   - Locations must specify "regionName"
   - Niches must specify "locationName"

5. **Consistency**: Maintain visual coherence across hierarchy

6. **Output**: Flat JSON only, no markdown or comments

Generate now:`
;
  console.log(rv);
  return rv;
}
