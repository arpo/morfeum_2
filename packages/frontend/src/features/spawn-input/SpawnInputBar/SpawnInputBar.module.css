/* Wrapper - contains both minimized and expanded states */
.wrapper {
  position: relative;
  background-color: var(--glass-bg);
  backdrop-filter: var(--glass-blur);
  -webkit-backdrop-filter: var(--glass-blur);
  border-radius: var(--radius-md) var(--radius-md) 0 0;
  box-shadow: var(--shadow-lg);
  /* border: 1px solid var(--color-border); */
  border-bottom: none;
  overflow: hidden;
  transition: max-height 0.3s ease-out, transform 0.3s ease-out;
}

.wrapper.expanded {
  max-height: 300px;
  transform: translateY(0);
}

.wrapper.minimized {
  max-height: 48px;
  transform: translateY(10px);
}

/* Minimized Tab */
.minimizedTab {
  display: none;
  justify-content: center;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm) var(--spacing-md);
  cursor: pointer;
  transition: filter var(--transition-fast);
}

.minimized .minimizedTab {
  display: flex;
  opacity: 1;
  pointer-events: auto;
}

.minimizedTab:hover {
  filter: brightness(1.1);
}

.minimizedText {
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--color-text);
  user-select: none;
}

/* Expanded Content */
.expandedContent {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
  padding: var(--spacing-sm) var(--spacing-md);
  opacity: 1;
  pointer-events: auto;
  transition: opacity 0.2s ease-out;
}

.minimized .expandedContent {
  opacity: 0;
  pointer-events: none;
}

.topRow {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  justify-content: space-between;
}

.minimizeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  padding: 0;
  background-color: var(--color-bg);
  color: var(--color-text-secondary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: all var(--transition-fast);
  flex-shrink: 0;
}

.minimizeButton:hover {
  background-color: var(--color-bg-tertiary);
  color: var(--color-text);
}

.toggleGroup {
  display: flex;
  align-items: center;
  gap: 0;
  border-radius: var(--radius-md);
  overflow: hidden;
  border: 1px solid var(--color-border);
  width: fit-content;
}

.toggleButton {
  padding: var(--spacing-sm) var(--spacing-lg);
  background-color: var(--color-bg);
  color: var(--color-text);
  border: none;
  cursor: pointer;
  font-size: var(--text-sm);
  font-weight: 500;
  transition: all var(--transition-fast);
  border-right: 1px solid var(--color-border);
}

.toggleButton:last-child {
  border-right: none;
}

.toggleButton:hover:not(:disabled) {
  background-color: var(--color-bg-secondary);
}

.toggleButton.active {
  background-color: var(--color-primary);
  color: white;
}

.toggleButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.textarea {
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  font-size: var(--text-xs);
  font-family: inherit;
  background-color: var(--color-bg);
  color: var(--color-text);
  resize: vertical;
  box-sizing: border-box;
  transition: border-color var(--transition-fast);
  height: 3rem;
}

.textarea:focus {
  outline: none;
  border-color: var(--color-primary);
}

.buttonRow {
  display: flex;
  gap: var(--spacing-md);
  align-items: center;
}

.shuffleButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--text-md);
  background-color: var(--color-bg-secondary);
  color: var(--color-text);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.shuffleButton:hover {
  background-color: var(--color-bg-tertiary);
}

.generateButton {
  padding: var(--spacing-sm) var(--spacing-lg);
  background-color: var(--color-primary);
  color: var(--color-bg);
  border: none;
  border-radius: var(--radius-sm);
  cursor: pointer;
  font-size: var(--text-md);
  font-weight: 600;
  transition: all var(--transition-fast);
  white-space: nowrap;
}

.generateButton:hover:not(:disabled) {
  background-color: var(--color-primary-hover);
}

.generateButton:disabled {
  background-color: var(--color-secondary);
  cursor: not-allowed;
  opacity: 0.6;
}

.errorMessage {
  color: var(--color-error);
  font-size: var(--text-sm);
  margin-top: var(--spacing-xs);
}
